{"version":3,"sources":["components/AccountBalance.js","components/Navbar.js","components/Home.js","components/UserProfile.js","components/Login.js","components/Credits.js","components/Debits.js","App.js","reportWebVitals.js","index.js"],"names":["AccountBalance","this","props","accountBalance","Component","Navbar","className","to","Home","UserProfile","userName","memberSince","LogIn","handleChange","e","updatedUser","state","user","target","value","setState","handleSubmit","preventDefault","mockLogIn","redirect","password","onSubmit","type","name","defaultValue","onChange","Credits","credits","addCredit","useState","description","setDescription","amount","setAmount","handleFieldChange","date","Date","toISOString","slice","htmlFor","id","required","min","step","inputMode","reverse","map","credit","Debits","debits","addDebit","debit","trim","parseFloat","index","toFixed","App","logInInfo","newUser","currentUser","newCredits","creditList","Number","newDebits","debitList","a","Promise","all","fetch","creditsResponse","debitsResponse","json","creditsData","debitsData","totalCredits","reduce","total","totalDebits","console","error","basename","exact","path","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1bd87b9a.chunk.js","sourcesContent":["/*==================================================\nsrc/components/AccountBalance.js\n\nThe AccountBalance component displays account balance. It is included in other page views.\n==================================================*/\nimport React, {Component} from 'react';\n\nclass AccountBalance extends Component {\n  // Display account balance\n  render() {\n    return (\n      <div>\n       Current Balance: {this.props.accountBalance}\n      </div>\n    );\n  }\n}\n\nexport default AccountBalance;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './Navbar.css'; \n\nconst Navbar = () => (\n  <nav className=\"navbar\">\n    <h1 className=\"bank-name\">Bank of React</h1>\n    <div className=\"nav-links\">\n      <Link to=\"/\">Home</Link>\n      <Link to=\"/userProfile\">User Profile</Link>\n      <Link to=\"/login\">Login</Link>\n      <Link to=\"/credits\">Credits</Link>\n      <Link to=\"/debits\">Debits</Link>\n    </div>\n  </nav>\n);\n\nexport default Navbar;\n","/*==================================================\nsrc/components/Home.js\n\nThe Home component is used to demonstrate the use of Link.\n==================================================*/\nimport React, {Component} from 'react';\nimport AccountBalance from './AccountBalance';\n// import {Link} from 'react-router-dom';\nimport './Home.css';\nimport Navbar from './Navbar';\n\n\nclass Home extends Component {\n  render() {\n    return (\n  \n      <div className=\"home-container\">\n              <Navbar /> \n<main className=\"home-content\">\n  <div className=\"card-container\">\n    <h2>Welcome back!</h2>\n    <AccountBalance accountBalance={this.props.accountBalance} />\n  </div>\n</main>\n\n        \n      </div>\n    );\n  }\n}\n\nexport default Home;","/*==================================================\nsrc/components/UserProfile.js\n\nThe UserProfile component is used to demonstrate the use of Route and Link.\nNote: You don't need to work on this file for the Assignment.\n==================================================*/\nimport React, {Component} from 'react';\n// import {Link} from 'react-router-dom';\nimport Navbar from './Navbar';\nimport './Userprofile.css';\n\n\nclass UserProfile extends Component {\n  render() {\n    return (\n\n      <div className=\"home-container\"> \n      <Navbar /> \n\n      <main className=\"home-content\">\n      <div className=\"profile-card\">\n        \n        <h1 className=\"profile-title\">User Profile</h1>\n\n        <div className=\"profile-info\">\n              <div className=\"info-row\">\n                <span className=\"label\">Username:</span>\n                <span>{this.props.userName}</span>\n              </div>\n\n              <div className=\"info-row\">\n                <span className=\"label\">Member Since:</span>\n                <span>{this.props.memberSince}</span>\n              </div>\n              </div>\n           \n        </div>\n      </main>\n      </div>\n    );\n  }\n}\n\nexport default UserProfile;","/*==================================================\nsrc/components/Login.js\n\nThe LogIn component is used to demonstrate the use of Redirect.\nNote: You don't need to work on this file for the Assignment.\n==================================================*/\nimport React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\n// import {Link} from 'react-router-dom';\nimport './Login.css';\nimport Navbar from './Navbar';\n\nclass LogIn extends Component {\n  constructor (props) {  // Create and initialize state\n    super(props)\n    this.state = {\n      user: {\n        //userName: '',\n        userName: this.props.user.userName,  // Initialize userName using props input (currentUser in App.js)\n        password: ''\n      },\n      redirect: false  // Redirect property used to trigger Redirect\n    }\n  }\n\n  // When User Name input is changed, capture the new input value and update state\n  handleChange = (e) => {\n    const updatedUser = {...this.state.user};  // Create an object for state\n    updatedUser.userName = e.target.value;  // Set object's userName to the new input value\n    this.setState({user: updatedUser})  // Update state with object values\n  }\n\n  // When user clicked \"Log In\" button, store user data and then redirect to \"User Profile\" page\n  handleSubmit = (e) => {\n    e.preventDefault()\n    this.props.mockLogIn(this.state.user)  // Update state in the top-level component (App.js)\n    this.setState({redirect: true})  // Update state to trigger Redirect\n  }\n  \n  render () {\n    // Redirect to \"User Profile\" page when \"Log In\" button is clicked\n    if (this.state.redirect) {  \n      return (<Redirect to=\"/userProfile\"/>);\n    }\n\n    // Render the login form (and call \"handleSubmit\" method when \"Log In\" button is clicked to submit form)\n    return (\n\n      <div className=\"home-container\">\n      <Navbar /> \n      <main className=\"home-content\"> \n      <div className=\"card-container login-card\">\n            <h2 className=\"login-heading\">Login</h2>\n        \n        <form onSubmit={this.handleSubmit} className=\"login-form\">\n          <div  className=\"form-group\">\n            <label>User Name</label>\n            <input type=\"text\" name=\"userName\" defaultValue={this.props.user.userName} onChange={this.handleChange} />\n          </div>\n          <div className=\"form-group\">\n                <label>Password</label>\n            <input type=\"password\" name=\"password\" />\n          </div>\n          <button className=\"login-button\">Log In</button>\n        </form>  \n   \n       \n      </div>\n      </main>\n      </div>\n    );\n  }\n}\n\nexport default LogIn;","/*==================================================\nsrc/components/Credits.js\n\nThe Credits component contains information for Credits page view.\nNote: You need to work on this file for the Assignment.\n==================================================*/\nimport {Link} from 'react-router-dom';\nimport React, { useState } from 'react';\nimport AccountBalance from './AccountBalance';\nimport './Credit_debit.css';\nimport Navbar from './Navbar';\n\n\nconst Credits = ({ credits, accountBalance, addCredit }) => {\n\n  const [description, setDescription] = useState('');\n  const [amount, setAmount] = useState('');\n\n  const handleFieldChange = (e) => {\n    const { name, value } = e.target;\n    if (name === 'description') setDescription(value);\n    else if (name === 'amount') setAmount(value);\n  \n};\n\nconst handleSubmit = (e) => {\n  e.preventDefault();\n  const date = new Date().toISOString().slice(0, 10);\n\n  // new credit object\n  const credit = {description,\n    amount,       \n    date\n  };\n\n  // Call App.js function passed via props\n  addCredit(credit);\n\n  // reset fields\n  setDescription('');\n  setAmount('');\n};\n\n// Render credit history to be displayed \nconst renderCredits = () => {\n  return credits.slice().reverse().map((credit) => (\n    <li key={credit.id} className=\"credit-card\">\n      <div className=\"credit-amount\">{credit.amount}</div>\n      <div className=\"credit-description\">{credit.description}</div>\n      <div className=\"credit-date\">{credit.date.slice(0, 10)}</div>\n    </li>\n  ));\n};\n\n\n  return (\n<div className=\"home-container\">\n      <Navbar />\n\n      <main className=\"home-content\">\n\n        <div className=\"credit-card-container\">\n        <h1 className=\"page-title\">Credits</h1>\n        <hr className=\"section-divider\" />\n\n          <h2 className=\"credit-balance-title\">\n            <AccountBalance accountBalance={accountBalance} />\n          </h2>\n\n          <form onSubmit={handleSubmit} className=\"credit-form\">\n            <div className=\"form-row\">\n              <label htmlFor=\"amount\" className=\"form-label\">Amount</label>\n              <input\n                      type=\"number\"\n                      name=\"amount\"\n                      id=\"amount\"\n                      value={amount}\n                      onChange={handleFieldChange}\n                      className=\"form-input\"\n                      required\n                      min=\"0.01\"\n                      step=\"0.01\"\n                      inputMode=\"decimal\"\n                    />\n\n            </div>\n\n            <div className=\"form-row\">\n              <label htmlFor=\"description\" className=\"form-label\">Description</label>\n              <input\n                type=\"text\"\n                name=\"description\"\n                id=\"description\"\n                value={description}\n                onChange={handleFieldChange}\n                className=\"form-input\"\n                required\n              />\n            </div>\n\n            <button type=\"submit\" className=\"form-button\">Add Credit</button>\n          </form>\n\n          <div className=\"credit-history\">\n            <h3>Credit History</h3>\n            <ul className=\"credit-list\">{renderCredits()}</ul>\n          </div>\n\n          <Link className=\"profile-link\" to=\"/\">← Return to Home</Link>\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default Credits;","/*==================================================\nsrc/components/Debits.js\n\nThe Debits component contains information for Debits page view.\nNote: You need to work on this file for the Assignment.\n==================================================*/\nimport React, { useState } from 'react';\n// import {Link} from 'react-router-dom';\nimport Navbar from './Navbar';\nimport AccountBalance from './AccountBalance';\nimport './Credit_debit.css'; \n\nconst Debits = ({ debits, accountBalance, addDebit }) => {\n\n  const [description, setDescription] = useState('');\n  const [amount, setAmount] = useState('');\n\n  const handleFieldChange = (e) => {\n    const { name, value } = e.target;\n    if (name === 'description') setDescription(value);\n    else if (name === 'amount') setAmount(value);\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const date = new Date().toISOString().slice(0, 10);\n    const debit = {\n      description: description.trim(),\n      amount: parseFloat(amount),\n      date,\n    };\n    addDebit(debit);\n    setDescription('');\n    setAmount('');\n  };\n\n  const renderDebits = () => {\n    return debits.slice().reverse().map((debit, index) => (\n      <li key={debit.id || index} className=\"credit-card\">\n        <div className=\"credit-amount\">-${parseFloat(debit.amount).toFixed(2)}</div>\n        <div className=\"credit-description\">{debit.description}</div>\n        <div className=\"credit-date\">{debit.date.slice(0, 10)}</div>\n      </li>\n    ));\n  };\n\n\n  // // Create the list of Debit items\n  // let debitsView = () => {\n  //   const { debits } = props;\n  //   return debits.map((debit) => {  // Extract \"id\", \"amount\", \"description\" and \"date\" properties of each debits JSON array element\n  //     let date = debit.date.slice(0,10);\n  //     return <li key={debit.id}>{debit.amount} {debit.description} {date}</li>\n  //   });\n  // }\n  // Render the list of Debit items and a form to input new Debit item\n  return (\n    <div className=\"home-container\">\n\n      < Navbar/>\n      <main className=\"home-content\">\n        <div className=\"credit-card-container\">\n        <h1 className=\"page-title\">Debits</h1>\n        <hr className=\"section-divider\" />\n          <h2 className=\"credit-balance-title\">\n            <AccountBalance accountBalance={accountBalance} />\n          </h2>\n\n          <form onSubmit={handleSubmit} className=\"credit-form\">\n            <div className=\"form-row\">\n              <label htmlFor=\"amount\" className=\"form-label\">Amount</label>\n              <input\n                type=\"number\"\n                name=\"amount\"\n                id=\"amount\"\n                value={amount}\n                onChange={handleFieldChange}\n                className=\"form-input\"\n                required\n                min=\"0.01\"\n                step=\"0.01\"\n              />\n            </div>\n\n            <div className=\"form-row\">\n              <label htmlFor=\"description\" className=\"form-label\">Description</label>\n              <input\n                type=\"text\"\n                name=\"description\"\n                id=\"description\"\n                value={description}\n                onChange={handleFieldChange}\n                className=\"form-input\"\n                required\n              />\n            </div>\n            <button type=\"submit\" className=\"form-button\">Add Debit</button>\n          </form>\n\n          <div className=\"credit-history\">\n            <h3>Debit History</h3>\n            <ul className=\"credit-list\">{renderDebits()}</ul>\n          </div>\n        </div>\n      </main>\n</div>\n  );\n};\n\nexport default Debits;","/*==================================================\nsrc/App.js\n\nThis is the top-level component of the app.\nIt contains the top-level state.\n==================================================*/\nimport React, {Component} from 'react';\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\n\n// Import other components\nimport Home from './components/Home';\nimport UserProfile from './components/UserProfile';\nimport LogIn from './components/Login';\nimport Credits from './components/Credits';\nimport Debits from './components/Debits';\n\nclass App extends Component {\n  constructor() {  // Create and initialize state\n    super(); \n    this.state = {\n      accountBalance: 1234567.89,\n      creditList: [],\n      debitList: [],\n      currentUser: {\n        userName: 'Joe Smith',\n        memberSince: '11/22/99',\n      }\n    };\n  }\n  async componentDidMount() {\n    try {\n      // Fetch data \n      const [creditsResponse, debitsResponse] = await Promise.all([\n        fetch('https://johnnylaicode.github.io/api/credits.json'),\n        fetch('https://johnnylaicode.github.io/api/debits.json')\n      ]);\n  \n      const [creditsData, debitsData] = await Promise.all([\n        creditsResponse.json(),\n        debitsResponse.json()\n      ]);\n  \n      // total credits and debits\n      const totalCredits = creditsData.reduce((total, credit) => total + credit.amount, 0);\n      const totalDebits = debitsData.reduce((total, debit) => total + debit.amount, 0);\n  \n      this.setState({\n        creditList: creditsData,\n        debitList: debitsData,\n        accountBalance: totalCredits - totalDebits\n      });\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  }\n  // Update state's currentUser (userName) after \"Log In\" button is clicked\n  mockLogIn = (logInInfo) => {  \n    const newUser = {...this.state.currentUser};\n    newUser.userName = logInInfo.userName;\n    this.setState({currentUser: newUser})\n  }\n    // Adding new credit & updating balance\n    addCredit = (credit) => {\n      const newCredits = [...this.state.creditList, credit];\n      this.setState({\n        creditList: newCredits,\n        accountBalance: this.state.accountBalance + Number(credit.amount),\n      });\n    };\n  // updating balance when new debit is added\n  addDebit = (debit) => {\n    const newDebits = [...this.state.debitList, debit];\n    this.setState({\n      debitList: newDebits,\n      accountBalance: this.state.accountBalance - Number(debit.amount),\n    });\n  };\n  // Create Routes and React elements to be rendered using React components\n  render() {  \n    // Create React elements and pass input props to components\n    const HomeComponent = () => (<Home accountBalance={this.state.accountBalance} />)\n    const UserProfileComponent = () => (\n      <UserProfile userName={this.state.currentUser.userName} memberSince={this.state.currentUser.memberSince} />\n    )\n    const LogInComponent = () => (<LogIn user={this.state.currentUser} mockLogIn={this.mockLogIn} />)\n    const CreditsComponent = () => (<Credits credits={this.state.creditList} addCredit = {this.addCredit} accountBalance = {this.state.accountBalance}/>) \n    const DebitsComponent = () => (<Debits debits={this.state.debitList} addDebit = {this.addDebit} accountBalance = {this.state.accountBalance} />) \n\n    // Important: Include the \"basename\" in Router, which is needed for deploying the React app to GitHub Pages\n    return (\n      <Router basename=\"/my-react-app\">\n        <div>\n          <Route exact path=\"/\" render={HomeComponent}/>\n          <Route exact path=\"/userProfile\" render={UserProfileComponent}/>\n          <Route exact path=\"/login\" render={LogInComponent}/>\n          <Route exact path=\"/credits\" render={CreditsComponent}/>\n          <Route exact path=\"/debits\" render={DebitsComponent}/>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","/*==================================================\nsrc/index.js\n\nThis file renders the top-level component App which contains all components of the app).\n==================================================*/\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n// Note: In above, StrictMode is a tool for highlighting potential problems in an application. \n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}